@model Library.Models.user

@{
    ViewBag.Title = "Add User";
}

@using (Html.BeginForm("Create", "users", FormMethod.Post, new { enctype = "multipart/form-data", @class = "user" ,role = "form"}))
{
    @Html.AntiForgeryToken()

    <div class="card o-hidden border-0 shadow-lg">
        <div class="card-header">
            <div class="font-weight-bold text-gray-800 text-center h3">
                Add New User To Library
                <i class="fas fa-users"></i>
            </div>
        </div>
        <div class="card-body p-0">
            <!-- Nested Row within Card Body -->
            <div class="row">
                <div class="col-lg-8">
                    <div class="p-5">
                        <div class="form-group row">
                            @Html.ValidationSummary(true, "", new { @class = "invalid-feedback text-danger" })
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-sm-2 col-form-label form-control-plaintext" })
                            <div class="col-sm-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.first_name, "First Name", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.last_name, "Last Name", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("gender", new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "Male",Value = "Male"},
                                    new SelectListItem {Text = "Female",Value = "Female"}
                                }, "Select Gender", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "tags control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("EmailConfirmed", new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "Not Confirmed",Value = Convert.ToString(false)},
                                    new SelectListItem {Text = "Confirmed",Value = Convert.ToString(true)}
                                }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "tags control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("PhoneNumberConfirmed", new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "Confirmed",Value = Convert.ToString(true)},
                                    new SelectListItem {Text = "Not Confirmed",Value = Convert.ToString(false),Selected = true}
                                }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>


                        <div class="form-group row custom-file">
                            @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 form-control-plaintext" })
                            <div class="col-md-5 mb-3 mb-sm-0 col-sm-10">
                                @Html.TextBoxFor(model => model.uploadedUserImage, new { type = "file", @class = "form-control-file custom-file-input", data_val_extension = "Select Only Images files", data_val_extension_extension = "jpg,png,jpeg,gif", required = true })
                                <label class="custom-file-label" for="photo">Choose file...</label>
                                @Html.ValidationMessageFor(model => model.uploadedUserImage, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary btn-user btn-block" />
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="pt-5">
                        <!-- Illustrations -->
                        <div class="m-0">
                            <img class="hidden-sm hidden-xs px-3 px-sm-4 mt-3 mb-4" style="width: 43rem;height: 27rem;margin-left:-300px;" src="~/Content/img/undraw_add_user_ipe3.svg" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = " btn btn-danger text-white" })
    </div>
}
