@model Library.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Register</title>
    <link rel="icon" href="~/Images/icon.png">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- Custom fonts for this template-->
    <link href="~/Content/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <!-- Custom styles for this template-->
    <link href="~/Content/css/admin.css" rel="stylesheet" />

</head>
<body class="bg-gradient-primary">
    <div class="container">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-5 d-none d-lg-block bg-register-image"></div>
                    <div class="col-lg-7">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">Create an Account!</h1>
                            </div>
                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal user", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control form-control-user", placeholder = "Username" })
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-6 mb-3 mb-sm-0">
                                        @Html.TextBoxFor(m => m.first_name, new { @class = "form-control form-control-user", placeholder = "First Name" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.last_name, new { @class = "form-control form-control-user", placeholder = "Last Name" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-12 mb-3 mb-sm-0">
                                        @Html.DropDownList("gender", new List<SelectListItem>
                                        {
                                            new SelectListItem {Text = "Male",Value = "Male"},
                                            new SelectListItem {Text = "Female",Value = "Female"}
                                        }, "Select Gender", new { @class = "form-control dropdown default-select", placeholder = "Gender" })
                                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "invalid-feedback text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-user", placeholder = "Email Address" })
                                </div>
                                <div class="form-group">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-user", placeholder = "Password" })
                                </div>
                                <div class="form-group">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-user", placeholder = "Repeat Password" })
                                </div>
                                <div class="col-md-offset-1 col-md-11">
                                    <input type="submit" class="btn btn-primary btn-user btn-block" value="Register" />
                                </div>
                            }
                            <hr>
                            <div class="text-center">
                                <a class="small" href="~/Account/Login">Already have an account? Login!</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="~/Content/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <!-- Custom scripts for all pages-->
    <script src="~/Content/js/admin.js"></script>
    @section Validation {
        <script src="~/Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
        <script type="text/javascript">
            // GetClientValidationRules
            $.validator.unobtrusive.adapters.addSingleVal("fileszie", "maxsize");
            $.validator.addMethod("filesize", function (value, element, params) {

                var files = $(element).prop("files");
                s = files[0].size;
                return s <= 1048576 * params;
            });
        </script>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</body>

</html>