@model Library.Models.book

@{
    ViewBag.Title = "Edit " + Model.title;
}

@using (Html.BeginForm("Edit", "books", FormMethod.Post, new { enctype = "multipart/form-data", @class = "user" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.book_id)
    <div class="card o-hidden border-0 shadow-lg">
        <div class="card-header">
            <div class="font-weight-bold text-gray-800 text-center h3">
                Edit Book In Library
                <i class="fas fa-edit"></i>
            </div>
        </div>
        <div class="card-body p-0">
            <!-- Nested Row within Card Body -->
            <div class="row">
                <div class="col-lg-8">
                    <div class="p-5">
                        <div class="form-group row">
                            @Html.ValidationSummary(true, "", new { @class = "invalid-feedback text-danger" })
                            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "col-sm-2 col-form-label form-control-plaintext" })
                            <div class="col-sm-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.edition, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.edition, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.edition, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.publication_id, "Publication", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("publication_id", null, htmlAttributes: new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.publication_id, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.author_id, "Author", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("author_id", null, htmlAttributes: new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.author_id, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.subcategory_id, "subcategory", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("subcategory_id", null, htmlAttributes: new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.subcategory_id, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.pages, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.pages, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.pages, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.TextAreaFor(model => model.description, new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.member_id, "Added By", htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("member_id", null, htmlAttributes: new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.member_id, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.tags, htmlAttributes: new { @class = "tags control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.EditorFor(model => model.tags, new { htmlAttributes = new { @class = "form-control tags ", placeholder = "Seperate between each tag with (,)" } })
                                @Html.ValidationMessageFor(model => model.tags, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.availabilty, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 custom-control custom-radio mb-3">
                                @Html.RadioButton("availabilty", 1, true) Yes
                                @Html.RadioButton("availabilty", 2) No
                                @Html.ValidationMessageFor(model => model.availabilty, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.rate, htmlAttributes: new { @class = "control-label col-md-2 form-control-plaintext" })
                            <div class="col-md-10 mb-3 mb-sm-0">
                                @Html.DropDownList("rate", new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "Bad",Value = "1"},
                                    new SelectListItem {Text = "Good",Value = "2"},
                                    new SelectListItem {Text = "Very Good",Value = "3"},
                                    new SelectListItem {Text = "Excellent",Value = "4"}
                                }, "Rate Of The Book", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.rate, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row custom-file">
                            @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 form-control-plaintext" })
                            <div class="col-md-5 mb-3 mb-sm-0 col-sm-10">
                                @Html.TextBoxFor(model => model.uploadedImage, new { type = "file", @class = "form-control-file custom-file-input", data_val_extension = "Select Only Images files", data_val_extension_extension = "jpg,png,jpeg,gif"})
                                <label class="custom-file-label" for="photo">Choose file...</label>
                                @Html.ValidationMessageFor(model => model.uploadedImage, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>

                        <div class="form-group row custom-file">
                            @Html.Label("Book File", htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 form-control-plaintext", id = "file" })
                            <div class="col-md-5 mb-3 mb-sm-0 col-sm-10">
                                @Html.TextBoxFor(model => model.uploadedFile, new { type = "file", @class = "form-control-file custom-file-input", data_val_extension = "Select Only PDF files", data_val_extension_extension = "pdf" })
                                <label class="custom-file-label" for="file">Choose file...</label>
                                @Html.ValidationMessageFor(model => model.uploadedFile, "", new { @class = "invalid-feedback text-danger" })
                            </div>
                        </div>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary btn-user btn-block" />
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="pt-5">
                        <!-- Illustrations -->
                        <div class="m-0">
                            <img class="hidden-sm hidden-xs px-3 px-sm-4 mt-3 mb-4" style="width: 43rem;height: 27rem;margin-left:-300px;" src="~/Content/img/recycle.jpg" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = " btn btn-danger text-white" })
    </div>
}
